# version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - .:/var/www
      # - ./vendor:/var/www/vendor #local
      # - ./storage:/var/www/storage #local

    networks:
      - laravel
    # expose:
    # - "9000"  # Expose port 9000 internally for Nginx
    # depends_on:
    #   postgres:
    #     condition: service_healthy
    environment:
      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      # - APP_URL=${APP_URL}
      # - APP_ENV=${APP_ENV}
      # - APP_KEY=${APP_KEY}
    # entrypoint: ["/usr/local/bin/entrypoint.sh"]
    entrypoint: ["php-fpm"]


  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      # - "9000:80" #local
      - "8080:80" #production
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - .:/var/www
      # - ./storage:/var/www/storage #production
    networks:
      - laravel
    depends_on:
      - app

  # postgres:
  #   image: postgres:15
  #   container_name: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_DB: ${DB_DATABASE}
  #     POSTGRES_USER: ${DB_USERNAME}
  #     POSTGRES_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - bms-backend_laravel
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

# volumes:
#   postgres_data:
#     driver: local

networks:
  laravel:
    driver: bridge